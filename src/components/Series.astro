---
import { CollectionEntry } from 'astro:content'
import Icon from "../components/Icon.astro";
import {button} from "../static/cssts/button.css";

export interface Props {
  series: CollectionEntry<"article">[];
  currentIndex: number;
};

const {series, currentIndex} = Astro.props as Props;

const seriesName = series[0].data.partOfSeries;
---

<div id="series" class="no-print">
  <button class="top content-btn">
    <div class="flex flex-col items-start gap-1">
      <h2>Part of series: {seriesName}</h2>
      <p>This post is part of a series! Checkout the the other posts about this topic</p>
    </div>
    <Icon id="turn-series-icon" icon="arrow-down" size="md" color="var(--blue-11)" />
  </button>
  <div class="content hidden">
    {series.map((v, i) => {
      let title = v.id.replaceAll("-", " ");
      title = title.charAt(0).toUpperCase() + title.slice(1);
      let desc = v.data.description;
      let cuttoff = false;

      if (v.data.description.length > 80) {
        desc = v.data.description.slice(0, 80);
        desc += " ...";
        cuttoff = true;
      }
      return (
      <a class="serie-item"  href={`/logs/${v.id}`}>
        {i === currentIndex ? (<span class="serie-this">(this one)</span>) : <span class="serie-num">#{i + 1}</span>}
        <div class="flex flex-col gap-1">
          <h1 class="serie-title">{title}</h1>
          <p class="serie-desc"><span>{desc}</span>{cuttoff && <span class={button({size: "sm", variant: "link"})}>read more</span>}</p>
        </div>
      </a>
      );
    })}
  </div>
</div>

<script>
const content: HTMLButtonElement = document.querySelector(".content")!;
const btn: HTMLButtonElement = document.querySelector(".content-btn")!;
const icon: HTMLElement = document.getElementById("turn-series-icon")!;

btn.addEventListener("click", () => {
  content.classList.toggle("hidden");
  icon.classList.toggle("upside");
  btn.classList.toggle("open");
})
</script>

<style>

.serie-item {
  display: flex;
  padding: 0.75rem 1.25rem;
  gap: 2rem;
  align-items: center;
  border: 1px solid var(--blue-6);
  background-color: var(--blue-4);
  border-radius: 0.5rem;
}
.serie-num {
  font-weight: 700;
  font-size: 1.5rem;
  color: var(--blue-11);
}

.serie-this {
  font-weight: 700;
  font-size: 1rem;
  color: var(--blue-11);
}

.serie-title {
  font-weight: 600;
  font-size: 1.25rem;
  color: var(--blue-11);
}

.serie-desc {
  font-weight: 500;
  max-width: 45ch;
  color: var(--blue-12);
}
  #series {
    background-color: var(--blue-3);
    border: 1px solid var(--blue-6);
    border-radius: 0.5rem;
    display: flex;
    flex-direction: column;
    overflow: hidden;
  }

  h2 {
    color: var(--blue-11);
    font-size: 1.2rem;
    font-weight: 700;
  }

  p {
    color: var(--blue-12);
    font-size: 1rem;
  }

  .top {
    transition: background-color 0.3s ease;
    display: flex;
    align-items: center;
    justify-content: space-between;
    /*&:where(.content.hidden) {*/
    &.open {
      border-bottom: 1px solid var(--blue-6);
    }
    &:hover {
      background-color: var(--blue-4);
    }
  }


  .content-btn {
    &.upside {
      transform: rotate(180deg);
    }
    padding: 1.5rem;
    /*border-radius: 50%;*/
  }

  #arrow {
    transform: rotate(-90deg);
  }

  .content {
    padding: 1.5rem;
    display: flex;
    flex-direction: column;
    gap: 1rem;
    &.hidden {
      display: none;
    }
  }
</style>
