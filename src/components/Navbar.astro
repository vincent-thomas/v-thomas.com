---
import Socials from "./Socials.astro";
import { SITE_TITLE } from '../consts';
import { Icon } from 'astro-icon/components';
import { button } from '../static/cssts/button.css';
import {isPathActive} from "../utils/isPathaActive";

const links = [
  { href: '/', text: 'Home' },
  { href: '/work', text: 'My work' },
  { href: '/logs', text: 'Developer log' },
  ];

export type Props = {
  overrideTitle?: string;
};

const {overrideTitle} = Astro.props;

---

<div id="root-navbar">
  <navbar class="flex justify-between items-center w-full" transition:persist>
    <a href="/" class="font-bold text-xl px-3 py-1 rounded-lg text-blue1 mr-auto">{!!overrideTitle ? overrideTitle : SITE_TITLE}</a>
    <div class="no-print">
      <button class="lg:hidden text-blue1 font-bold text-xl p-3 rounded-full bg-blue-hover" id="hamburger-handler" aria-label="Open menu" data-action="click:nice">
        <Icon name="menu-right" />
      </button>
      <div class="hidden lg:block">
        <div class="flex-row flex gap-12">
          <ul class="flex gap-6 lg:flex-row flex-col items-center">
            {links.map(({href, text}) =>
            <li>
              <a
                href={href}
                class:list={{
                [button({underline: true })]: isPathActive(Astro.url.pathname, href),
                [button({underline: false })]: !isPathActive(Astro.url.pathname, href)
                }}>
                  {text}
              </a>
            </li>
            )}
          </ul>
          <div class="flex gap-4 flex-col justify-center">
            <p class="lg:hidden text-blue2 font-bold text-3xl">Let's connect</p>
            <Socials />
          </div>
        </div>
      </div>
    </div>
  </navbar>
  <div class="hidden bg-[var(--blue-3)] rounded-lg p-4 mt-4" id="navbar-mobile-links">
    <ul class="flex flex-col gap-4 mb-6">
      {links.map(link => <li><a href={link.href} class="text-blue2 font-semibold px-4 py-3 hover:bg-[var(--blue-4)] rounded-md block">{link.text}</a></li>)}
    </ul>
    <Socials />
  </div>
</div>

<script>
  const handler = document.querySelector("#hamburger-handler");

  handler?.addEventListener("click", () => {
    const existing = document.querySelector("#root-navbar>#navbar-mobile-links")!;

    existing.classList.toggle("hidden");

    //let navbar = document.getElementById("root-navbar")!;
    //let templateLinks: HTMLTemplateElement = document.getElementById("mobile-nav-navbar")! as HTMLTemplateElement;
    //let instance = templateLinks.content.cloneNode(true);
    //
    //navbar.appendChild(instance);
  });
</script>
