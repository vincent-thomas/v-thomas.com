---
import HeaderLink from './HeaderLink.astro';
import Socials from "./Socials.astro";
import { SITE_TITLE } from '../consts';
import Menu from "~icons/gg/menu-right-alt";

const links = [
  { href: '/', text: 'Home' },
  { href: '/work', text: 'My work' },
  { href: '/logs', text: 'Developer log' },
  ];

export type Props = {
  overrideTitle?: string;
};
const {overrideTitle} = Astro.props;
---
<div id="root-navbar">
  <template id="mobile-nav-navbar">
  </template>
  <navbar class="flex justify-end items-center w-full" transition:persist>
  <a href="/" class="font-bold text-xl px-3 py-1 rounded-lg text-blue1 mr-auto">{!!overrideTitle ? overrideTitle : SITE_TITLE}</a>
    <div class="no-print">
      <button class="lg:hidden text-blue1 font-bold text-xl p-3 rounded-full bg-blue-hover" id="hamburger-handler" set:html={Menu} aria-label="Open menu">
      </button>
      <div class="hidden lg:block">
        <div class="flex-row flex gap-12">
          <ul class="flex gap-6 lg:flex-row flex-col">
            {links.map(({href, text}) =>
              <li><HeaderLink activeClass="underline decoration-[2px]" href={href} class="text-blue2 font-semibold px-4 py-3 bg-blue-hover rounded-md block">
                  {text}
              </HeaderLink></li>
            )}
          </ul>
          <div class="flex gap-4 flex-col justify-center">
            <p class="lg:hidden text-blue2 font-bold text-3xl">Let's connect</p>

            <!-- This is a hack because socials cannot be in a string in script tags -->
            <div id="social-wrapper">
              <Socials />
            </div>
          </div>
        </div>
      </div>
    </div>
  </navbar>
</div>

<script is:inline define:vars={{ links }}>
  // This is a hack because socials cannot be in a string in script tags
  window.insertTemplate = function() {
    let social_links = document.getElementById("social-wrapper");
    let template = document.getElementById("mobile-nav-navbar");
    template.innerHTML = `
      <div class="bg-[var(--blue-3)] rounded-lg p-4 mt-4" id="navbar-mobile-links">
        <ul class="flex flex-col gap-4 mb-6">
          ${links.map(link => `<li><a href="${link.href}" class="text-blue2 font-semibold px-4 py-3 hover:bg-[var(--blue-4)] rounded-md block">${link.text}</a></li>`).join("")}
        </ul>
        ${social_links.innerHTML}
      </div>
    `;
  }
</script>

<script>
  function getMobileNavBtn() {
    return document.getElementById('hamburger-handler')!;
  }

  const toggleOpen = () => {
    const existing = document.querySelectorAll("#root-navbar>#navbar-mobile-links");

    if (existing.length != 0) {
      for (const item of existing) {
        item.remove();
      }
      return;
    }

    let navbar = document.getElementById("root-navbar")!;

    let templateLinks: HTMLTemplateElement = document.getElementById("mobile-nav-navbar")! as HTMLTemplateElement;

    let instance = templateLinks.content.cloneNode(true);

    navbar.appendChild(instance);
  }

  function addClickListener() {
    const btn = getMobileNavBtn();
    btn.addEventListener("click", toggleOpen);
  }

  function removeClickListener() {
    const btn = getMobileNavBtn();
    btn.removeEventListener("click", toggleOpen);
  }

  function init() {
    window.insertTemplate();
    removeClickListener(); // Ensure any existing listener is removed
    addClickListener(); // Add the new listener
  }

  // Initialize on first load
  init();


  // Reinitialize after swapping pages
  document.addEventListener("astro:after-swap", init);
</script>
