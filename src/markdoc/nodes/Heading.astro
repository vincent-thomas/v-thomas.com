---
export type Props = { level: number, id: string };
import Link from "../../icons/link.svg";

const {level, id} = Astro.props as Props;

const headerProps = {id, class:"header"};

if (level < 1 || level > 6) throw new Error("Invalid Heading");
---

<div class="outer">
  <a class="ignore-link cursor-pointer" href={`#${id}`}>
    <Link size="24px" />
  </a>
  {level === 1 && <h1 {...headerProps}><slot /></h1>}
  {level === 2 && <h2 {...headerProps}><slot /></h2>}
  {level === 3 && <h3 {...headerProps}><slot /></h3>}
  {level === 4 && <h4 {...headerProps}><slot /></h4>}
  {level === 5 && <h5 {...headerProps}><slot /></h5>}
  {level === 6 && <h6 {...headerProps}><slot /></h6>}
</div>

<style>
  a {
    visibility: hidden;
    transform: rotate(-45deg);
    color: var(--gray-11);

    svg {
      color: var(--gray-11);

      &:hover {
        color: var(--blue-11);
      }
    }
  }

  .outer {
    margin-inline-start: calc(-24px - 0.75rem);
    display: flex;
    align-items: center;
    gap: 0.75rem;

    @media screen and (min-width: 1000px) {
      &:hover a {
        visibility: visible;
      }
    }
  }

  h1,h2,h3,h4,h5,h6 {
    color: var(--blue-11);
  }

  .header {
    scroll-margin-top: 2rem;
    font-weight: 700;
  }

  h1 {
    font-size: 2.5rem;
  }

  h2 {
    font-size: 2rem;
  }

  h3 {
    font-size: 1.75rem;
  }

  h4 {
    font-size: 1.5rem;
  }

  h5 {
    font-size: 1.25rem;
  }

  h6 {
    font-size: 1rem;
  }
</style>
