---
import type { CollectionEntry } from 'astro:content';
import BaseHead from '../../components/BaseHead.astro';
import FormattedDate from '../../components/FormattedDate.astro';
import Body from "../Body.astro";
import GoBack from "../../components/GoBack.astro";

import LdHead from '../../components/LdHead.astro';
import {Navbar} from '../../components/Navbar';
import Footer from '../../components/Footer.astro';
import TagPill from '../../components/TagPill.astro';
import Heading from "../../markdoc/nodes/Heading.astro";
import { Image } from 'astro:assets';

import {blogHeroImage} from "./blogpost.css"


export type Props = CollectionEntry<'article'> & { minuteRead: number, lastModified: Date };

const { data: {description, pubDate, heroImage, tags,furtherReading} , minuteRead, id, lastModified } = Astro.props as Props;

if (!pubDate) throw new Error("Missing pubDate");

let title = id.replaceAll("-", " ");
title = title.charAt(0).toUpperCase() + title.slice(1);
---

<style lang="scss">
  article {
    display: flex;
    flex-direction: column;
    gap: calc(7 * 0.25rem);
  }

  #goback-btn-wrapper {
    margin-block: calc(12 * 0.25rem);
  }
</style>

<html lang="en">
	<head>
    <BaseHead title={title} description={description} image={heroImage?.dark.src} />
    <LdHead title={title} description={description} image={heroImage?.dark.src} pubDate={pubDate} />
    <link rel="stylesheet" href="/css/article.css" />
	</head>
  <Body>
    <Navbar overrideTitle="VT's dev log" />
    <div id="goback-btn-wrapper" class="no-print">
      <GoBack href="/logs" overrideText='All posts' />
    </div>
    <article>
      <div class="flex flex-col gap-4">
        {heroImage && (
          <Image widths={[852, 600, 400]} src={heroImage.dark} loading="eager" alt={heroImage.alt} class={blogHeroImage({forTheme: "dark"})}  />
          <Image widths={[852, 600, 400]} src={heroImage.light} loading="eager" alt={heroImage.alt} class={blogHeroImage({forTheme: "light"})}  />
        )}
        <div class="flex justify-between">
          <div class="text-gray-400 max-w-[45ch] flex flex-col">
            <p>{pubDate ? <>Published <FormattedDate date={pubDate} /></> : "Private draft"}</p>
            {pubDate != lastModified && (
              <p class="mt-1">
                Last updated <FormattedDate date={lastModified} />
              </p>
            )}
          </div>
          <span class="text-gray-400">{minuteRead} minute read</span>
        </div>
      </div>
      <h1 class="text-[var(--blue-indicator)] font-[800] md:text-5xl text-2xl text-left">{title}</h1>
      <div class="flex lg:flex-row flex-col justify-between lg:items-end gap-4">
        <p class="text-gray-400 max-w-[45ch] text-left">{description}</p>
        <div class="flex flex-wrap max-w-[300px] gap-3 items-center no-print">
          {tags.map(tag => <TagPill href={`/logs/tags/${tag}`}>{tag}</TagPill>)}
        </div>
      </div>
      <hr class="no-print" />
      <div class="my-content">
        <slot/>
        {!!furtherReading && (
          <Heading level={2} id="further-reading">Further reading</Heading>
          <p>
            These articles allow for further reading of the same topic, and may be relevant:
            <ul>
              {furtherReading.map(({url, title}) => (
                <li><a href={url} target="_blank">{title}</a></li>
              ))}
            </ul>
          </p>
        )}
      </div>
      <style is:global>
        /*KaTeX plugin needs this*/
        *[aria-hidden="true"] {
          display: none;
        }
      </style>
    </article>
    <Footer />
  </Body>
</html>
